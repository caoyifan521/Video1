<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lisa.dao.videoDao">
    <resultMap id="viMap" type="video">
        <id column="vid" property="id"></id>
        <result column="title" property="title"></result>
        <result column="detail" property="detail"></result>
        <result column="time" property="time"></result>
        <result column="spearkerId" property="spearkerId"></result>
        <result column="courseId" property="courseId"></result>
        <result column="videoUrl" property="videoUrl"></result>
        <result column="imageUrl" property="imageUrl"></result>
        <result column="playNum" property="playNum"></result>
    </resultMap>

    <select id="findAll" parameterType="map"  resultType="videoInfo">
        select v.id, v.title, v.detail ,v.time,s.speakerName,v.playNum, c.courseTitle from video v
        inner join speaker s on v.spearkerId = s.id
        inner join course c on v.courseId = c.id
        <where>
            <if test="title != null and title  != ''">
                title   like"%"#{title}"%"
            </if>
            <if test="speakerName != null and speakerName != ''">
                and speakerName=#{speakerName}
            </if>
            <if test="courseTitle != null and courseTitle != ''">
                and courseTitle=#{courseTitle}
            </if>
        </where>

    </select>
    <insert id="addVideo" parameterType="video">
        insert into video(title,spearkerId,courseId,time,imageUrl,videoUrl,detail)
        values (#{title},#{spearkerId},#{courseId},#{time},#{imageUrl},#{videoUrl},#{detail})
    </insert>
    <delete id="deleteById" parameterType="int">
        delete from video where id=#{id}
    </delete>
    <select id="findById" parameterType="int"  resultType="videoInfo2">
        select v.id, v.title, v.detail ,v.time,v.videoUrl,v.imageUrl,v.spearkerId,v.courseId,v.playnum,s.speakername
        from video v
        inner join speaker s
        on v.spearkerId=s.id
        where v.id=#{id}
    </select>
    <update id="update" parameterType="video">
             update video set title=#{title},detail=#{detail},time=#{time},videoUrl=#{videoUrl},spearkerId=#{spearkerId},courseId=#{courseId},imageUrl=#{imageUrl} where id=#{id}
    </update>
    <select id="findById1" parameterType="int" resultType="string">
        select videourl from video where id =#{id}
    </select>
    <select id="findAll2" parameterType="int" resultType="videoInfo">
        select v.title,v.detail,v.imageUrl,v.videourl,c.coursedesc,k.speakername,k.speakerdesc,k.headimgurl,s.subjectname
        from video v
        inner join course c
        on v.courseid=c.id
        inner join speaker k
        on v.spearkerid = k.id
        inner join subject s
        on c.subjectid = s.id
        where v.id=#{id}
    </select>
    <select id="findAll3" resultType="videoInfo2">
        select v.id, v.title, v.detail ,v.time,v.videoUrl,v.imageUrl,v.spearkerId,v.courseId,v.playnum,s.speakername
        from video v
        inner join speaker s
        on v.spearkerId=s.id
    </select>
    <delete id="deleteManyVideo" parameterType="map">
        delete from video where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>